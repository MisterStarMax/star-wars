{"version":3,"sources":["components/error-indecator/revenge.jpg","components/menu/person-menu.jpg","components/menu/planets-menu.jpg","components/menu/starships-menu.jpg","components/pagenotfound/page-not-found.jpg","components/header/index.js","components/header/header.js","components/error-indecator/index.js","components/error-indecator/error-indecator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/menu/index.js","components/menu/menu.js","components/pagenotfound/index.js","components/pagenotfound/notfound-page.js","components/untils/compose.js","components/untils/row.js","components/spinner/index.js","components/spinner/spinner.js","components/hoc/with-data-list.js","components/hoc/with-data-details.js","components/swapi-service-context.js","components/hoc/with-swapi-service.js","components/list/index.js","components/list/list.js","components/sw-component/lists.js","components/item-details/item-details.js","components/item-details/index.js","components/sw-component/details.js","components/pages/person-page.js","components/pages/planet-page.js","components/pages/starship-page.js","components/app/index.js","components/app/app.js","index.js","service/swapi-service.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","react_router_dom","to","ErrorIndecator","src","error","alt","ErrorBoundry","state","hasError","this","setState","components_error_indecator","props","children","Component","Menu","components_error_boundry","people","planets","starships","PageNotFound","pageNotFound","compose","_len","arguments","length","func","Array","_key","comp","reduceRight","prevResult","f","Row","_ref","left","right","Spinner","withDataList","View","_Component","_temp","_getPrototypeOf2","_this","Object","classCallCheck","args","possibleConstructorReturn","getPrototypeOf","call","apply","concat","data","updateData","getData","then","catch","inherits","createClass","key","value","_this$state","assign","components_spinner","withDataDetails","_class","item","image","loading","componentDidMount","_this$props","itemId","getImageUrl","prevProps","defaultProps","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","mapMethodToProps","Wrapped","serviceProps","List","onSelectedItem","renderItem","items","map","id","lable","onClick","withChildFunc","fn","name","ListPeople","service","getAllPeople","ListPlanets","getAllPlanets","ListStarships","getAllStarships","Record","field","label","ItemDetails","_ref2","Children","child","cloneElement","PersonDetails","getPerson","getImagePerson","components_item_details","item_details_Record","PlanetDetails","getPlanet","getImagePlanet","StarshipsDetails","getStarship","getImageStarship","withRouter","history","match","params","row","itemid","push","App","components_header","react_router","exact","path","render","components_menu","component","PersonPage","PlanetPage","StarshipsPage","swapi","_apiBase","_imageBase","getResource","_callee","url","res","regenerator_default","wrap","_context","prev","next","fetch","sent","ok","Error","json","abrupt","stop","_callee2","_context2","results","_tranformPerson","_callee3","person","_context3","_ref4","_callee4","_context4","_tranformPlanets","_callee5","planet","_context5","_ref7","_callee6","_context6","_tranformStarship","_callee7","_context7","_ref10","_extractId","gender","birth","birth_year","population","rotationPeriod","rotation_period","starshipClass","starship_class","model","ReactDOM","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.2bfb78ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/revenge.499d1a53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/person-menu.fad8992c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/planets-menu.f0877c50.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starships-menu.0924e400.jpg\";","module.exports = __webpack_public_path__ + \"static/media/page-not-found.e139e1f6.jpg\";","import Header from './header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return(\r\n    <div className=\"header\">\r\n      <Link to=\"/\" className=\"logo\"><h2>Star Wars</h2></Link>\r\n      <div className=\"menu\">\r\n        <Link to=\"/people/\">People</Link>\r\n        <Link to=\"/planets/\">Planets</Link>\r\n        <Link to=\"/starships/\">Starships</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import ErrorIndecator from './error-indecator';\r\n\r\nexport default ErrorIndecator;\r\n","import React from 'react';\r\nimport './error-indecator.css';\r\nimport error from './revenge.jpg';\r\n\r\nconst ErrorIndecator = () => {\r\n  return(\r\n    <div className=\"error-indecator\">\r\n      <img src={error} alt=\"error-indecator\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorIndecator;\r\n","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from 'react';\r\nimport ErrorIndecator from '../error-indecator';\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n  state = { hasError: false };\r\n\r\n  componentDidCatch (){\r\n    this.setState({hasError: true});\r\n  }\r\n\r\n  render(){\r\n    if (this.state.hasError) {\r\n      return <ErrorIndecator />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import Menu from './menu';\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorBoundry from '../error-boundry';\r\n\r\nimport people from './person-menu.jpg';\r\nimport planets from './planets-menu.jpg';\r\nimport starships from './starships-menu.jpg';\r\n\r\nimport './menu.css';\r\n\r\nconst Menu = () => {\r\n  return(\r\n    <div className=\"menu-main\">\r\n      <h2>Welcome to world Star Wars</h2>\r\n      <ErrorBoundry>\r\n        <div className=\"menu-block\">\r\n          <Link to=\"/people/\">\r\n            <h4>people</h4>\r\n            <img src={people} alt=\"people\"/>\r\n          </Link>\r\n          <Link to=\"/planets/\">\r\n          <h4>planets</h4>\r\n            <img src={planets} alt=\"planets\"/>\r\n          </Link>\r\n          <Link to=\"/starships/\">\r\n          <h4>starships</h4>\r\n            <img src={starships} alt=\"starships\"/>\r\n          </Link>\r\n        </div>\r\n      </ErrorBoundry>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import PageNotFound from './notfound-page';\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport pageNotFound from './page-not-found.jpg';\r\nimport './notfound-page.css';\r\n\r\nconst PageNotFound = () => {\r\n  return(\r\n    <div className=\"page-not-found\">\r\n      <h1>Page not found!</h1>\r\n      <img src={pageNotFound} alt=\"page not found\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","const compose = (...func) => (comp) => {\r\n  return func.reduceRight((prevResult, f) => f(prevResult), comp);\r\n}\r\n\r\nexport default compose;\r\n","import React from 'react';\r\nimport ErrorBoundry from '../error-boundry';\r\n\r\nconst Row = ({left, right}) => {\r\n  return(\r\n    <ErrorBoundry>\r\n      <div className=\"row\">\r\n        <div className=\"left block\">\r\n          <ErrorBoundry>\r\n            {left}\r\n          </ErrorBoundry>\r\n        </div>\r\n        <div className=\"right block\">\r\n          <ErrorBoundry>\r\n            {right}\r\n          </ErrorBoundry>\r\n        </div>\r\n      </div>\r\n    </ErrorBoundry>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return(\r\n    <div className=\"lds-css ng-scope\">\r\n      <div className=\"lds-pacman\">\r\n        <div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndecator from '../error-indecator';\r\n\r\nconst withDataList = (View) => {\r\n  return class extends Component {\r\n    state = {\r\n      data: null,\r\n      error: false\r\n    };\r\n\r\n    componentDidMount(){\r\n      this.updateData();\r\n    }\r\n\r\n    updateData = () => {\r\n      this.props.getData()\r\n        .then((data) => this.setState({ data }))\r\n        .catch((error) => this.setState({ error: true }));\r\n    }\r\n\r\n    render(){\r\n      const { data, error } = this.state;\r\n      if (error) return <ErrorIndecator />;\r\n      if (!data && !error) return <Spinner />;\r\n      return <View {...this.props} data={data} />\r\n    }\r\n  }\r\n}\r\n\r\nexport default withDataList;\r\n","import React, { Component } from 'react';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndecator from '../error-indecator';\r\n\r\nconst withDataDetails = (View) => {\r\n    return class extends Component {\r\n      static defaultProps = {\r\n        itemId: 5\r\n      }\r\n\r\n      state = {\r\n        item: null,\r\n        image: null,\r\n        loading: true,\r\n        error: false\r\n      };\r\n\r\n      componentDidMount = () => this.updateData();\r\n\r\n      componentDidUpdate(prevProps){\r\n        if (this.props.itemId !== prevProps.itemId) {\r\n          this.setState({loading: true});\r\n          this.updateData();\r\n        }\r\n      }\r\n\r\n      updateData = () => {\r\n        const { itemId, getImageUrl, getData } = this.props;\r\n        if(itemId){\r\n          getData(itemId)\r\n          .then((item) => this.setState({ item, image: getImageUrl(item), loading: false }))\r\n          .catch((error) => this.setState({ error: true, loading: false }));\r\n        }\r\n        else this.setState({ loading: false });\r\n      }\r\n\r\n      render(){\r\n        const { item, image, error, loading } = this.state;\r\n        if (loading) return <Spinner />;\r\n        if (error) return <ErrorIndecator />;\r\n        return <View {...this.props} item={item} image={image} />\r\n      }\r\n  }\r\n}\r\n\r\n\r\nexport default withDataDetails;\r\n","import React from 'react';\r\n\r\nconst {\r\n  Provider: SwapiServiceProvider,\r\n  Consumer: SwapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  SwapiServiceProvider,\r\n  SwapiServiceConsumer\r\n};\r\n","import React from 'react';\r\nimport { SwapiServiceConsumer } from '../swapi-service-context';\r\n\r\nconst withSwapiService = (mapMethodToProps) => (Wrapped) => {\r\n  return (props) => {\r\n    return(\r\n      <SwapiServiceConsumer>\r\n      {\r\n        (value) => {\r\n          const serviceProps = mapMethodToProps(value);\r\n          return <Wrapped {...props} {...serviceProps} />;\r\n        }\r\n      }\r\n      </SwapiServiceConsumer>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withSwapiService;\r\n","import List from './list';\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport './list.css';\r\n\r\nconst List = (props) => {\r\n  const { data, onSelectedItem, children: renderItem } = props;\r\n\r\n  const items = data.map((item) => {\r\n    const { id } = item;\r\n    const lable = renderItem(item);\r\n    return(\r\n      <li className=\"\" key={id} onClick={() => onSelectedItem(id)}>\r\n        { lable }\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"list_items\">\r\n      <ul>{items}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport { withDataList, withSwapiService } from '../hoc';\r\nimport { compose } from '../untils';\r\nimport List from '../list'\r\n\r\nconst withChildFunc = (fn) => (Wrapped) => {\r\n  return (props) => {\r\n    return(\r\n      <Wrapped {...props} >\r\n      {fn}\r\n      </Wrapped>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderItem = ({ name }) => <span>{name}</span>\r\n\r\nconst mapMethodToPropsPeople = (service) => {\r\n  return {\r\n    getData: service.getAllPeople\r\n  }\r\n}\r\n\r\nconst mapMethodToPropsPlanets = (service) => {\r\n  return {\r\n    getData: service.getAllPlanets\r\n  }\r\n}\r\n\r\nconst mapMethodToPropsStarships = (service) => {\r\n  return {\r\n    getData: service.getAllStarships\r\n  }\r\n}\r\n\r\nconst ListPeople = compose(withSwapiService(mapMethodToPropsPeople),\r\n                           withDataList,\r\n                           withChildFunc(renderItem)\r\n                          )(List);\r\nconst ListPlanets = compose(withSwapiService(mapMethodToPropsPlanets),\r\n                           withDataList,\r\n                           withChildFunc(renderItem)\r\n                          )(List);\r\nconst ListStarships = compose(withSwapiService(mapMethodToPropsStarships),\r\n                           withDataList,\r\n                           withChildFunc(renderItem)\r\n                          )(List);\r\n\r\nexport {\r\n  ListPeople,\r\n  ListPlanets,\r\n  ListStarships\r\n}\r\n","import React from 'react';\r\nimport { withDataDetails } from '../hoc'\r\nimport './item-details.css';\r\n\r\nconst Record = ({item, field, label}) => {\r\n  return(\r\n    <li>\r\n      <span> {label}: </span>\r\n      <span> {item[field]} </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport{\r\n  Record\r\n};\r\n\r\nconst ItemDetails = ({item, image, children }) => {\r\n  return(\r\n    <div className=\"person-details\">\r\n    <img src={image} alt={`${item.name}`} />\r\n    <div className=\"info-person\">\r\n      <h2>{item.name}</h2>\r\n      <ul>\r\n        {\r\n          React.Children.map(children, (child) => {\r\n            return React.cloneElement(child, { item })\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withDataDetails(ItemDetails);\r\n","import ItemDetails, { Record } from './item-details';\r\n\r\nexport { Record };\r\nexport default ItemDetails;\r\n","import React from 'react';\r\nimport { withSwapiService } from '../hoc';\r\nimport ItemDetails, { Record } from '../item-details';\r\n\r\nconst Person = (props) => {\r\n  return(\r\n    <ItemDetails {...props}>\r\n        <Record field={'gender'} label={'Gender'}/>\r\n        <Record field={'birth'} label={'Birth Year'}/>\r\n    </ItemDetails>\r\n  );\r\n}\r\n\r\nconst Planet = (props) => {\r\n  return(\r\n    <ItemDetails {...props}>\r\n        <Record field={'population'} label={'Population'}/>\r\n        <Record field={'rotationPeriod'} label={'Rotation Period'}/>\r\n    </ItemDetails>\r\n  );\r\n}\r\n\r\nconst Starships = (props) => {\r\n  return(\r\n    <ItemDetails {...props}>\r\n        <Record field={'model'} label={'Model'}/>\r\n        <Record field={'starshipClass'} label={'Starship Class'}/>\r\n        <Record field={'length'} label={'Length'}/>\r\n    </ItemDetails>\r\n  );\r\n}\r\n\r\nconst mapMethodToPropsPerson = (service) => {\r\n  return {\r\n    getData: service.getPerson,\r\n    getImageUrl: service.getImagePerson\r\n  }\r\n}\r\n\r\nconst PersonDetails = withSwapiService(mapMethodToPropsPerson)(Person);\r\n\r\nconst mapMethodToPropsPlanet = (service) => {\r\n  return {\r\n    getData: service.getPlanet,\r\n    getImageUrl: service.getImagePlanet\r\n  }\r\n}\r\n\r\nconst PlanetDetails = withSwapiService(mapMethodToPropsPlanet)(Planet);\r\n\r\nconst mapMethodToPropsStarships = (service) => {\r\n  return {\r\n    getData: service.getStarship,\r\n    getImageUrl: service.getImageStarship\r\n  }\r\n}\r\n\r\nconst StarshipsDetails = withSwapiService(mapMethodToPropsStarships)(Starships);\r\n\r\nexport {\r\n  PersonDetails,\r\n  PlanetDetails,\r\n  StarshipsDetails\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Row } from '../untils';\r\nimport { ListPeople, PersonDetails } from '../sw-component';\r\n\r\nconst PersonPage = ({ history, match }) => {\r\n  const { id } = match.params;\r\n  return(\r\n    <Row left={<ListPeople onSelectedItem={(itemid) => history.push(itemid)} />}\r\n         right={<PersonDetails itemId={id}/>} />\r\n  );\r\n}\r\n\r\nexport default withRouter(PersonPage);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Row } from '../untils';\r\nimport { ListPlanets, PlanetDetails } from '../sw-component';\r\n\r\nconst PlanetPage = ({ history, match }) => {\r\n  const { id } = match.params;\r\n  return(\r\n    <Row left={<ListPlanets onSelectedItem={(itemId) => history.push(itemId)}/>}\r\n                            right={<PlanetDetails itemId={id}/>} />\r\n  );\r\n};\r\n\r\nexport default withRouter(PlanetPage);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Row } from '../untils';\r\nimport { ListStarships, StarshipsDetails } from '../sw-component';\r\n\r\nconst StarshipsPage = ({ history, match }) => {\r\n  const { id } = match.params;\r\n  return(\r\n    <Row left={<ListStarships onSelectedItem={(itemId) => history.push(itemId)}/>}\r\n                            right={<StarshipsDetails itemId={id}/>} />\r\n  );\r\n};\r\n\r\nexport default withRouter(StarshipsPage);\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, HashRouter } from \"react-router-dom\";\r\n\r\nimport Header from '../header';\r\nimport Menu from '../menu';\r\nimport PageNotFound from '../pagenotfound';\r\nimport { PersonPage, PlanetPage, StarshipsPage } from '../pages';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  return(\r\n    <HashRouter>\r\n      <Router>\r\n        <div className=\"container\">\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => <Menu />} />\r\n            <Route exact path=\"/people/:id?\" component={PersonPage} />\r\n            <Route exact path=\"/planets/:id?\" component={PlanetPage} />\r\n            <Route exact path=\"/starships/:id?\" component={StarshipsPage} />\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nimport ErrorBoundry from './components/error-boundry';\nimport { SwapiServiceProvider } from './components/swapi-service-context';\nimport SwapiService from './service/swapi-service';\n\nconst swapi = new SwapiService();\n\nReactDOM.render(\n  <ErrorBoundry>\n    <SwapiServiceProvider value={swapi}>\n      <App />\n    </SwapiServiceProvider>\n  </ErrorBoundry>,\n  document.getElementById('root')\n);\n","class SwapiService {\r\n  _apiBase = 'https://swapi.co/api';\r\n  _imageBase = 'https://starwars-visualguide.com/assets/img';\r\n\r\n\r\n\r\n  getResource = async(url) => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error('error data');\r\n    }\r\n    return await res.json();\r\n  }\r\n\r\n  getAllPeople = async () => {\r\n    const res = await this.getResource('/people/');\r\n    return res.results.map(this._tranformPerson);\r\n  }\r\n\r\n  getPerson = async (id) => {\r\n    const person = await this.getResource(`/people/${id}/`);\r\n    return this._tranformPerson(person);\r\n  }\r\n\r\n  getImagePerson = ({id}) => {\r\n    return `${this._imageBase}/characters/${id}.jpg`;\r\n  }\r\n\r\n  getAllPlanets = async () => {\r\n    const res = await this.getResource('/planets/');\r\n    return res.results.map(this._tranformPlanets);\r\n  }\r\n\r\n  getPlanet = async (id) => {\r\n    const planet = await this.getResource(`/planets/${id}/`);\r\n    return this._tranformPlanets(planet);\r\n  }\r\n\r\n  getImagePlanet = ({id}) => {\r\n    return `${this._imageBase}/planets/${id}.jpg`;\r\n  }\r\n\r\n  getAllStarships = async () => {\r\n    const res = await this.getResource('/starships/');\r\n    return res.results.map(this._tranformStarship);\r\n  }\r\n\r\n  getStarship = async (id) => {\r\n    const starships = await this.getResource(`/starships/${id}/`);\r\n    return this._tranformStarship(starships);\r\n  }\r\n\r\n  getImageStarship = ({id}) => {\r\n    return `${this._imageBase}/starships/${id}.jpg`;\r\n  }\r\n\r\n  _extractId(item) {\r\n    const reg_exp = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(reg_exp)[1];\r\n  }\r\n\r\n  _tranformPerson = (person) => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      birth: person.birth_year\r\n    }\r\n  }\r\n  _tranformPlanets = (planet) => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period\r\n    }\r\n  }\r\n  _tranformStarship = (starships) => {\r\n    return {\r\n      id: this._extractId(starships),\r\n      name: starships.name,\r\n      starshipClass: starships.starship_class,\r\n      model : starships.model,\r\n      length : starships.length\r\n    }\r\n  }\r\n}\r\n\r\nexport default SwapiService;\r\n"],"sourceRoot":""}